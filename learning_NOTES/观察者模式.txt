what:观察者模式是关于多个对象想知道一个对象的数据变化情况的一种模式

观察者模式中有一个被称做“主题”的对象和若干个被称为“观察者”的对象，主题和观察者之间是

一对多的关系。当主题发生变化时，所有观察者都得到通知

抽象主题(Subject)角色：抽象主题角色把所有对观察者对象的引用保存在一个聚集（比如ArrayList对象）里，每个主题都可以有任何数量的观察者。抽象主题提供一个接口，可以增加和删除观察者对象，抽象主题角色又叫做抽象被观察者(Observable)角色。

具体主题(ConcreteSubject)角色：将有关状态存入具体观察者对象；在具体主题的内部状态改变时，给所有登记过的观察者发出通知。具体主题角色又叫做具体被观察者(Concrete Observable)角色。

抽象观察者(Observer)角色：为所有的具体观察者定义一个接口，在得到主题的通知时更新自己，这个接口叫做更新接口。

具体观察者(ConcreteObserver)角色：存储与主题的状态自恰的状态。具体观察者角色实现抽象观察者角色所要求的更新接口，以便使本身的状态与主题的状态 像协调。如果需要，具体观察者角色可以保持一个指向具体主题对象的引用。

优点：低耦合，符合开闭原则。

适合观察者模式的情境：
1.当一个对象的数据更新时需要通知其他对象，但这个对象又不希望与被通知的对象形成紧耦合
2.当一个对象数据更新时，这个对象需要让其他对象也各自更新自己的数据，但这个对象不知道具体有多少对象需要更新数据

